{"ast":null,"code":"var _jsxFileName = \"/Users/chandna/ArtistX/src/CoinList.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n\n  const buyCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue/coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price + priceChange, marketcap: c.marketcap + priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n\n  const sellCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue/coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price - priceChange, marketcap: c.marketcap - priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n\n  return (\n    <div className=\"stock-list\">\n      <h2>Available Coins</h2>\n      {coins.map((coin, index) => (\n        <div key={index} className=\"stock-item\">\n          <div className=\"stock-border\">\n            <img src={coin.imageurl} alt={coin.name} width=\"200\" height=\"200\" />\n            <p>{coin.name} ({coin.symbol})</p>\n            <p>Coin Price: ${coin.price.toFixed(3)}</p>\n            <p>Market Cap: ${coin.marketcap.toFixed(3)}</p>\n            <p>Your Coins: {userCoins[coin.symbol]}</p>\n            <input\n              type=\"text\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button onClick={() => buyCoin(coin)}>Buy</button>\n            <button onClick={() => sellCoin(coin)}>Sell</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n*/\n\nimport React, { useState } from 'react';\nimport './CoinList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinList = ({\n  balance,\n  updateBalance,\n  userCoins,\n  curCoins,\n  updateFunction\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState('');\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const buyCoin = coin => {\n    // ... (your buyCoin function logic)\n  };\n  const sellCoin = coin => {\n    // ... (your sellCoin function logic)\n  };\n  function categorizeCoin(coin) {\n    // Customize the categorization logic based on your criteria.\n    const marketCap = coin.marketcap;\n    if (marketCap < 1e9) {\n      return 'Trending Now'; // Coins with market cap less than 1 billion\n    } else if (marketCap < 1e10) {\n      return 'Top Gainers'; // Coins with market cap between 1 billion and 10 billion\n    } else if (marketCap < 1e11) {\n      return 'Large Cap'; // Coins with market cap between 10 billion and 100 billion\n    } else {\n      return 'Most Traded'; // Coins with market cap greater than or equal to 100 billion\n    }\n  }\n\n  // Replace placeholders with actual artist names, use an array for each category, and include image URLs\n  const categorizedCoins = {\n    'Trending Now': [{\n      name: 'Drake',\n      image: 'url_to_drake_image'\n    }, {\n      name: 'Adele',\n      image: 'url_to_adele_image'\n    }, {\n      name: 'Ed Sheeran',\n      image: 'url_to_ed_sheeran_image'\n    }, {\n      name: 'Div',\n      image: 'url_to_div_image'\n    }],\n    'Top Gainers': [{\n      name: 'Kanye',\n      image: 'url_to_kanye_image'\n    }, {\n      name: 'Ariana Grande',\n      image: 'url_to_ariana_grande_image'\n    }, {\n      name: 'Taylor Swift',\n      image: 'url_to_taylor_swift_image'\n    }, {\n      name: 'ArtistX',\n      image: 'url_to_artistx_image'\n    }],\n    'Large Cap': [{\n      name: 'BeyoncÃ©',\n      image: 'url_to_beyonce_image'\n    }, {\n      name: 'Justin Bieber',\n      image: 'url_to_justin_bieber_image'\n    }, {\n      name: 'Rihanna',\n      image: 'url_to_rihanna_image'\n    }],\n    'Most Traded': [{\n      name: 'Eminem',\n      image: 'url_to_eminem_image'\n    }, {\n      name: 'Lady Gaga',\n      image: 'url_to_lady_gaga_image'\n    }, {\n      name: 'The Weeknd',\n      image: 'url_to_the_weeknd_image'\n    }]\n  };\n  const coins = {\n    'Drake': 10,\n    'Adele': 15,\n    'Ed Sheeran': 16,\n    'Div': 14,\n    'ArtistX': 22\n  };\n  const toggleCategoryExpansion = category => {\n    setExpandedCategories(prevExpanded => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Coins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), Object.entries(categorizedCoins).map(([category, artistsInCategory]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [category, \" - Top 3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleCategoryExpansion(category),\n        children: expandedCategories[category] ? 'See Less' : 'See All'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), expandedCategories[category] ? artistsInCategory.map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }, this), artist.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyCoin(artist.name),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellCoin(artist.name),\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)) : artistsInCategory.slice(0, 3).map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.image,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }, this), artist.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyCoin(artist.name),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellCoin(artist.name),\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this))]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinList, \"MpnbtMbAJATn47Bfr8SrFsLEYLE=\");\n_c = CoinList;\nexport default CoinList;\nvar _c;\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CoinList","balance","updateBalance","userCoins","curCoins","updateFunction","_s","quantity","setQuantity","expandedCategories","setExpandedCategories","buyCoin","coin","sellCoin","categorizeCoin","marketCap","marketcap","categorizedCoins","name","image","coins","toggleCategoryExpansion","category","prevExpanded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","artistsInCategory","onClick","artist","index","src","type","value","onChange","e","target","slice","alt","_c","$RefreshReg$"],"sources":["/Users/chandna/ArtistX/src/CoinList.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n\n  const buyCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue/coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price + priceChange, marketcap: c.marketcap + priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n\n  const sellCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue/coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price - priceChange, marketcap: c.marketcap - priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n\n  return (\n    <div className=\"stock-list\">\n      <h2>Available Coins</h2>\n      {coins.map((coin, index) => (\n        <div key={index} className=\"stock-item\">\n          <div className=\"stock-border\">\n            <img src={coin.imageurl} alt={coin.name} width=\"200\" height=\"200\" />\n            <p>{coin.name} ({coin.symbol})</p>\n            <p>Coin Price: ${coin.price.toFixed(3)}</p>\n            <p>Market Cap: ${coin.marketcap.toFixed(3)}</p>\n            <p>Your Coins: {userCoins[coin.symbol]}</p>\n            <input\n              type=\"text\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button onClick={() => buyCoin(coin)}>Buy</button>\n            <button onClick={() => sellCoin(coin)}>Sell</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n*/\n\n\nimport React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [quantity, setQuantity] = useState('');\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  const buyCoin = (coin) => {\n    // ... (your buyCoin function logic)\n  };\n\n  const sellCoin = (coin) => {\n    // ... (your sellCoin function logic)\n  };\n\n  function categorizeCoin(coin) {\n    // Customize the categorization logic based on your criteria.\n    const marketCap = coin.marketcap;\n\n    if (marketCap < 1e9) {\n      return 'Trending Now'; // Coins with market cap less than 1 billion\n    } else if (marketCap < 1e10) {\n      return 'Top Gainers'; // Coins with market cap between 1 billion and 10 billion\n    } else if (marketCap < 1e11) {\n      return 'Large Cap'; // Coins with market cap between 10 billion and 100 billion\n    } else {\n      return 'Most Traded'; // Coins with market cap greater than or equal to 100 billion\n    }\n  }\n\n  // Replace placeholders with actual artist names, use an array for each category, and include image URLs\n  const categorizedCoins = {\n    'Trending Now': [\n      { name: 'Drake', image: 'url_to_drake_image' },\n      { name: 'Adele', image: 'url_to_adele_image' },\n      { name: 'Ed Sheeran', image: 'url_to_ed_sheeran_image' },\n      { name: 'Div', image: 'url_to_div_image' },\n    ],\n    'Top Gainers': [\n      { name: 'Kanye', image: 'url_to_kanye_image' },\n      { name: 'Ariana Grande', image: 'url_to_ariana_grande_image' },\n      { name: 'Taylor Swift', image: 'url_to_taylor_swift_image' },\n      { name: 'ArtistX', image: 'url_to_artistx_image' },\n    ],\n    'Large Cap': [\n      { name: 'BeyoncÃ©', image: 'url_to_beyonce_image' },\n      { name: 'Justin Bieber', image: 'url_to_justin_bieber_image' },\n      { name: 'Rihanna', image: 'url_to_rihanna_image' },\n    ],\n    'Most Traded': [\n      { name: 'Eminem', image: 'url_to_eminem_image' },\n      { name: 'Lady Gaga', image: 'url_to_lady_gaga_image' },\n      { name: 'The Weeknd', image: 'url_to_the_weeknd_image' },\n    ],\n  };\n\n  const coins = {\n    'Drake': 10,\n    'Adele': 15,\n    'Ed Sheeran': 16,\n    'Div': 14,\n    'ArtistX': 22,\n  };\n\n  const toggleCategoryExpansion = (category) => {\n    setExpandedCategories((prevExpanded) => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category],\n    }));\n  };\n\n  return (\n    <div className=\"coin-list\">\n      <h2>Available Coins</h2>\n      {Object.entries(categorizedCoins).map(([category, artistsInCategory]) => (\n        <div key={category}>\n          <h3>\n            {category} - Top 3\n          </h3>\n          <button onClick={() => toggleCategoryExpansion(category)}>\n            {expandedCategories[category] ? 'See Less' : 'See All'}\n          </button>\n          <h5></h5>\n          {expandedCategories[category]\n            ? artistsInCategory.map((artist, index) => (\n                <div key={index} className=\"coin-item\">\n                  <img src={artist.image}  />\n                  {artist.name}\n                  <input\n                    type=\"text\"\n                    value={quantity}\n                    onChange={(e) => setQuantity(e.target.value)}\n                  />\n                  <button onClick={() => buyCoin(artist.name)}>Buy</button>\n                  <button onClick={() => sellCoin(artist.name)}>Sell</button>\n                </div>\n              ))\n            : artistsInCategory.slice(0, 3).map((artist, index) => (\n                <div key={index} className=\"coin-item\">\n                  <img src={artist.image} alt={artist.name} />\n                  {artist.name}\n                  <input\n                    type=\"text\"\n                    value={quantity}\n                    onChange={(e) => setQuantity(e.target.value)}\n                  />\n                  <button onClick={() => buyCoin(artist.name)}>Buy</button>\n                  <button onClick={() => sellCoin(artist.name)}>Sell</button>\n                </div>\n              ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}