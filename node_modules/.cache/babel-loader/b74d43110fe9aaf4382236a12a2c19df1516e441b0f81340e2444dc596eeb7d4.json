{"ast":null,"code":"var _jsxFileName = \"/Users/chandna/ArtistX/src/CoinList.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n\n  const buyCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue/coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price + priceChange, marketcap: c.marketcap + priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n\n  const sellCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue/coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price - priceChange, marketcap: c.marketcap - priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n\n  return (\n    <div className=\"stock-list\">\n      <h2>Available Coins</h2>\n      {coins.map((coin, index) => (\n        <div key={index} className=\"stock-item\">\n          <div className=\"stock-border\">\n            <img src={coin.imageurl} alt={coin.name} width=\"200\" height=\"200\" />\n            <p>{coin.name} ({coin.symbol})</p>\n            <p>Coin Price: ${coin.price.toFixed(3)}</p>\n            <p>Market Cap: ${coin.marketcap.toFixed(3)}</p>\n            <p>Your Coins: {userCoins[coin.symbol]}</p>\n            <input\n              type=\"text\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button onClick={() => buyCoin(coin)}>Buy</button>\n            <button onClick={() => sellCoin(coin)}>Sell</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n*/\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './CoinList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinList = ({\n  balance,\n  updateBalance,\n  userCoins,\n  curCoins,\n  updateFunction\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState('');\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [curArtist, setCurArtist] = useState(null); // New state to track the selected artist\n  const [followers, setEm] = useState(0);\n  const [backend, setBackend] = useState(null);\n  const [token, setToken] = useState(\"BQAeireHKAQmQqSVjcGmR-6XCIs9TpBq4ME8UoJKGqMtny_0a1USJ0k_wx6yDT3VDOGa0NJLopHRiCpy7daPgFDNC6rw-c0ac-W8F-Ow4tCVzQp4FEUHOoSzohhA3eQV4EOG_D-6Z1oXp6wEl9UwZ3ktsu5kn-rgFnUePrqE8np8VlBoW5sxmFH-ccj7v80\");\n  const selectArtist = artist => {\n    // Set the current artist when an artist is selected\n    setCurArtist(artist);\n  };\n  const handleClick = () => {\n    axios.get('http://127.0.0.1:5000/api/getData').then(response => {\n      setData(response.data);\n    }).catch(error => {\n      setData(\"blocked\");\n    });\n  };\n  const resetArtist = () => {\n    // Set the current artist when an artist is selected\n    setCurArtist(null);\n  };\n  const setFollowers = followers => {\n    setEm(followers);\n  };\n\n  // Replace placeholders with actual artist names, use an array for each category, and include image URLs\n  const categorizedCoins = {\n    'Newest Artists': [],\n    'Top Gainers': [],\n    'Large Cap': [],\n    // Initialize as an empty array for dynamic content\n    'Most Traded': []\n  };\n  const aData = {\n    'Drake': {\n      image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLKUMfmMV0fyTzTfPziofp2H5IK5xK59gghxbywSLu&s',\n      marketCap: 10000000000,\n      timeOnPlatform: 100,\n      growth: 0,\n      buys: 50,\n      sells: 30\n    },\n    'Adele': {\n      image: 'url_to_adele_image',\n      marketCap: 8000000000,\n      timeOnPlatform: 365,\n      growth: 1.3,\n      buys: 30,\n      sells: 40\n    },\n    'Ed Sheeran': {\n      image: 'url_to_ed_sheeran_image',\n      marketCap: 9500000000,\n      timeOnPlatform: 485,\n      growth: 0.67,\n      buys: 45,\n      sells: 25\n    },\n    'Kanye': {\n      image: 'url_to_kanye_image',\n      marketCap: 12000000000,\n      timeOnPlatform: 128,\n      growth: 1.2,\n      buys: 70,\n      sells: 25\n    },\n    'Ariana Grande': {\n      image: 'url_to_ariana_grande_image',\n      marketCap: 11000000000,\n      timeOnPlatform: 236,\n      growth: 1.11,\n      buys: 60,\n      sells: 35\n    },\n    'Taylor Swift': {\n      image: 'url_to_taylor_swift_image',\n      marketCap: 10500000000,\n      timeOnPlatform: 1934,\n      growth: 1.05,\n      buys: 80,\n      sells: 15\n    },\n    'BeyoncÃ©': {\n      image: 'url_to_beyonce_image',\n      marketCap: 8500000000,\n      timeOnPlatform: 1023,\n      growth: 1.06,\n      buys: 75,\n      sells: 30\n    },\n    'Justin Bieber': {\n      image: 'https://hips.hearstapps.com/hmg-prod/images/justin-bieber-gettyimages-1202421980.jpg?crop=1xw:1.0xh;center,top&resize=640:*',\n      marketCap: 9000000000,\n      timeOnPlatform: 24,\n      growth: 0.98,\n      buys: 40,\n      sells: 45\n    },\n    'Rihanna': {\n      image: 'https://cdn.britannica.com/83/211883-050-46933F1A/Rihanna-Barbadian-singer-Robyn-Fenty.jpg',\n      marketCap: 9500000000,\n      timeOnPlatform: 1,\n      growth: 0.96,\n      buys: 70,\n      sells: 20\n    },\n    'Eminem': {\n      image: 'url_to_eminem_image',\n      marketCap: 10500000000,\n      timeOnPlatform: 10500000000,\n      growth: 0.94,\n      buys: 95,\n      sells: 40\n    },\n    'Lady Gaga': {\n      image: 'url_to_lady_gaga_image',\n      marketCap: 10000000000,\n      timeOnPlatform: 782,\n      growth: 0.99,\n      buys: 85,\n      sells: 55\n    },\n    'The Weeknd': {\n      image: 'url_to_the_weeknd_image',\n      marketCap: 9900000000,\n      timeOnPlatform: 237,\n      growth: 0.995,\n      buys: 65,\n      sells: 35\n    }\n  };\n  const [artistData, setData] = useState(aData);\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const largeCapArtists = Object.keys(artistData).sort((a, b) => artistData[b]['marketCap'] - artistData[a]['marketCap']).map(name => ({\n    name,\n    image: `url_to_${name}_image`\n  }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Large Cap'] = largeCapArtists;\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const newestArtists = Object.keys(artistData).sort((a, b) => artistData[a]['timeOnPlatform'] - artistData[b]['timeOnPlatform']).map(name => ({\n    name,\n    image: `url_to_${name}_image`\n  }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Newest Artists'] = newestArtists;\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const topGainers = Object.keys(artistData).sort((a, b) => artistData[b]['growth'] - artistData[a]['growth']).map(name => ({\n    name,\n    image: `url_to_${name}_image`\n  }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Top Gainers'] = topGainers;\n  const mostTraded = Object.keys(artistData).sort((a, b) => artistData[b]['sells'] + artistData[b]['buys'] - artistData[a]['buys'] - artistData[a]['sells']).map(name => ({\n    name,\n    image: `url_to_${name}_image`\n  }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Most Traded'] = mostTraded;\n\n  // Combine buys and sells to calculate total trades\n\n  const toggleCategoryExpansion = category => {\n    setExpandedCategories(prevExpanded => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category]\n    }));\n  };\n  const ArtistTab = async () => {\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: curArtist,\n        type: \"artist\"\n      }\n    });\n    setFollowers(data.artists.items[0].followers.total);\n  };\n  const ArtistTab2 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: curArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Followers: \", followers.toLocaleString('en-US')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetArtist,\n        children: \"Back to Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  };\n  if (artistData['Drake']['growth'] == 0) {\n    handleClick();\n    return 1;\n  }\n  if (curArtist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), Object.entries(categorizedCoins).map(([category, artistsInCategory]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [category, \" - Top 3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleCategoryExpansion(category),\n          children: expandedCategories[category] ? 'See Less' : 'See All'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: [\"Play \", backend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), expandedCategories[category] ? artistsInCategory.map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-with-text-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"left-image\",\n              src: artistData[artist.name]['image'],\n              alt: artist.name,\n              onClick: () => {\n                selectArtist(artist.name);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Price is TBD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this)) : artistsInCategory.slice(0, 3).map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-with-text-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"left-image\",\n              src: artistData[artist.name]['image'],\n              alt: artist.name,\n              onClick: () => {\n                selectArtist(artist.name);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Price is TBD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  } else {\n    ArtistTab();\n    return ArtistTab2();\n  }\n  ;\n};\n_s(CoinList, \"JacsyXE8HuWCIkRhvrg3xzEKnHo=\");\n_c = CoinList;\nexport default CoinList;\nvar _c;\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CoinList","balance","updateBalance","userCoins","curCoins","updateFunction","_s","quantity","setQuantity","expandedCategories","setExpandedCategories","curArtist","setCurArtist","followers","setEm","backend","setBackend","token","setToken","selectArtist","artist","handleClick","get","then","response","setData","data","catch","error","resetArtist","setFollowers","categorizedCoins","aData","image","marketCap","timeOnPlatform","growth","buys","sells","artistData","largeCapArtists","Object","keys","sort","a","b","map","name","newestArtists","topGainers","mostTraded","toggleCategoryExpansion","category","prevExpanded","ArtistTab","headers","Authorization","params","q","type","artists","items","total","ArtistTab2","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","className","entries","artistsInCategory","index","src","alt","slice","_c","$RefreshReg$"],"sources":["/Users/chandna/ArtistX/src/CoinList.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n\n  const buyCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue/coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price + priceChange, marketcap: c.marketcap + priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n\n  const sellCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue/coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price - priceChange, marketcap: c.marketcap - priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n\n  return (\n    <div className=\"stock-list\">\n      <h2>Available Coins</h2>\n      {coins.map((coin, index) => (\n        <div key={index} className=\"stock-item\">\n          <div className=\"stock-border\">\n            <img src={coin.imageurl} alt={coin.name} width=\"200\" height=\"200\" />\n            <p>{coin.name} ({coin.symbol})</p>\n            <p>Coin Price: ${coin.price.toFixed(3)}</p>\n            <p>Market Cap: ${coin.marketcap.toFixed(3)}</p>\n            <p>Your Coins: {userCoins[coin.symbol]}</p>\n            <input\n              type=\"text\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button onClick={() => buyCoin(coin)}>Buy</button>\n            <button onClick={() => sellCoin(coin)}>Sell</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n*/\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './CoinList.css';\n\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [quantity, setQuantity] = useState('');\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [curArtist, setCurArtist] = useState(null); // New state to track the selected artist\n  const [followers, setEm] = useState(0);\n  const [backend, setBackend] = useState(null);\n  const [token, setToken] = useState(\"BQAeireHKAQmQqSVjcGmR-6XCIs9TpBq4ME8UoJKGqMtny_0a1USJ0k_wx6yDT3VDOGa0NJLopHRiCpy7daPgFDNC6rw-c0ac-W8F-Ow4tCVzQp4FEUHOoSzohhA3eQV4EOG_D-6Z1oXp6wEl9UwZ3ktsu5kn-rgFnUePrqE8np8VlBoW5sxmFH-ccj7v80\")\n\n  const selectArtist = (artist) => {\n    // Set the current artist when an artist is selected\n    setCurArtist(artist);\n  };\n\n  const handleClick = () => {\n    axios.get('http://127.0.0.1:5000/api/getData')\n      .then(response => {\n        setData(response.data);\n      })\n      .catch(error => {\n        setData(\"blocked\");\n      });\n  };\n\n  const resetArtist = () => {\n    // Set the current artist when an artist is selected\n    setCurArtist(null);\n  };\n  \n  const setFollowers = (followers) => {\n    setEm(followers);\n  }\n\n  // Replace placeholders with actual artist names, use an array for each category, and include image URLs\n  const categorizedCoins = {\n    'Newest Artists': [],\n    'Top Gainers': [],\n    'Large Cap': [], // Initialize as an empty array for dynamic content\n    'Most Traded': [],\n  };\n\n\n  const aData = {\n    'Drake': {\n      image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLKUMfmMV0fyTzTfPziofp2H5IK5xK59gghxbywSLu&s',\n      marketCap: 10000000000,\n      timeOnPlatform: 100,\n      growth: 0,\n      buys: 50,\n      sells: 30,\n    },\n    'Adele': {\n      image: 'url_to_adele_image',\n      marketCap: 8000000000,\n      timeOnPlatform: 365,\n      growth: 1.3,\n      buys: 30,\n      sells: 40,\n    },\n    'Ed Sheeran': {\n      image: 'url_to_ed_sheeran_image',\n      marketCap: 9500000000,\n      timeOnPlatform: 485,\n      growth: 0.67,\n      buys: 45,\n      sells: 25,\n    },\n    'Kanye': {\n      image: 'url_to_kanye_image',\n      marketCap: 12000000000,\n      timeOnPlatform: 128,\n      growth: 1.2,\n      buys: 70,\n      sells: 25,\n    },\n    'Ariana Grande': {\n      image: 'url_to_ariana_grande_image',\n      marketCap: 11000000000,\n      timeOnPlatform: 236,\n      growth: 1.11,\n      buys: 60,\n      sells: 35,\n    },\n    'Taylor Swift': {\n      image: 'url_to_taylor_swift_image',\n      marketCap: 10500000000,\n      timeOnPlatform: 1934,\n      growth: 1.05,\n      buys: 80,\n      sells: 15,\n    },\n    'BeyoncÃ©': {\n      image: 'url_to_beyonce_image',\n      marketCap: 8500000000,\n      timeOnPlatform: 1023,\n      growth: 1.06,\n      buys: 75,\n      sells: 30,\n    },\n    'Justin Bieber': {\n      image: 'https://hips.hearstapps.com/hmg-prod/images/justin-bieber-gettyimages-1202421980.jpg?crop=1xw:1.0xh;center,top&resize=640:*',\n      marketCap: 9000000000,\n      timeOnPlatform: 24,\n      growth: 0.98,\n      buys: 40,\n      sells: 45,\n    },\n    'Rihanna': {\n      image: 'https://cdn.britannica.com/83/211883-050-46933F1A/Rihanna-Barbadian-singer-Robyn-Fenty.jpg',\n      marketCap: 9500000000,\n      timeOnPlatform: 1,\n      growth: 0.96,\n      buys: 70,\n      sells: 20,\n    },\n    'Eminem': {\n      image: 'url_to_eminem_image',\n      marketCap: 10500000000,\n      timeOnPlatform: 10500000000,\n      growth: 0.94,\n      buys: 95,\n      sells: 40,\n    },\n    'Lady Gaga': {\n      image: 'url_to_lady_gaga_image',\n      marketCap: 10000000000,\n      timeOnPlatform: 782,\n      growth: 0.99,\n      buys: 85,\n      sells: 55,\n    },\n    'The Weeknd': {\n      image: 'url_to_the_weeknd_image',\n      marketCap: 9900000000,\n      timeOnPlatform: 237,\n      growth: 0.995,\n      buys: 65,\n      sells: 35,\n    },\n  };\n  \n  const [artistData, setData] = useState(aData)\n\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const largeCapArtists = Object.keys(artistData)\n    .sort((a, b) => artistData[b]['marketCap'] - artistData[a]['marketCap'])\n    .map((name) => ({ name, image: `url_to_${name}_image` }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Large Cap'] = largeCapArtists;\n\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const newestArtists = Object.keys(artistData)\n    .sort((a, b) => artistData[a]['timeOnPlatform'] - artistData[b]['timeOnPlatform'])\n    .map((name) => ({ name, image: `url_to_${name}_image` }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Newest Artists'] = newestArtists;\n\n  // Sort artists by market cap and select the top 3 for the 'Large Cap' category\n  const topGainers = Object.keys(artistData)\n    .sort((a, b) => artistData[b]['growth'] - artistData[a]['growth'])\n    .map((name) => ({ name, image: `url_to_${name}_image` }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Top Gainers'] = topGainers;\n\n  const mostTraded = Object.keys(artistData)\n    .sort((a, b) => artistData[b]['sells'] + artistData[b]['buys'] - artistData[a]['buys'] - artistData[a]['sells'])\n    .map((name) => ({ name, image: `url_to_${name}_image` }));\n\n  // Update 'Large Cap' category with the top 3 artists\n  categorizedCoins['Most Traded'] = mostTraded;\n\n\n  // Combine buys and sells to calculate total trades\n\n\n  const toggleCategoryExpansion = (category) => {\n    setExpandedCategories((prevExpanded) => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category],\n    }));\n  };\n\n  const ArtistTab = async () => {\n    const {data} = await axios.get(\"https://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n          q: curArtist,\n          type: \"artist\"\n        }\n    })\n    setFollowers(data.artists.items[0].followers.total)\n  };\n\n  const ArtistTab2 = () => {\n    return (\n      <div>\n        <h2>{curArtist}</h2>\n        <h3>Total Followers: {followers.toLocaleString('en-US')}</h3>\n        <button onClick={resetArtist}>Back to Lobby</button>\n      </div>\n    );\n  };\n  if (artistData['Drake']['growth'] == 0) {\n    handleClick()\n    return 1\n  }\n  if (curArtist == null) {\n    return (\n      <div className=\"coin-list\">\n        <h2>Available Coins</h2>\n        {Object.entries(categorizedCoins).map(([category, artistsInCategory]) => (\n          <div key={category}>\n            <h3>{category} - Top 3</h3>\n            <button onClick={() => toggleCategoryExpansion(category)}>\n              {expandedCategories[category] ? 'See Less' : 'See All'}\n            </button>\n            <button onClick={handleClick}>Play {backend}</button>\n            <h5></h5>\n            {expandedCategories[category]\n              ? artistsInCategory.map((artist, index) => (\n                <div className=\"container\">\n                <div key={index} className=\"image-with-text-container\">\n                      <img className=\"left-image\" src={artistData[artist.name]['image']} alt={artist.name} \n                      onClick={() => {\n                        selectArtist(artist.name);\n                      }}\n                      />\n                      <div className=\"right-text\">\n                        <h2>{artist.name}</h2>\n                        <p>Price is TBD</p>\n                      </div>\n                </div>\n                </div>\n                ))\n              : artistsInCategory.slice(0, 3).map((artist, index) => (\n                <div className=\"container\">\n                <div key={index} className=\"image-with-text-container\">\n                      <img className=\"left-image\" src={artistData[artist.name]['image']} alt={artist.name} \n                      onClick={() => {\n                        selectArtist(artist.name);\n                      }}\n                      />\n                      <div className=\"right-text\">\n                        <h2>{artist.name}</h2>\n                        <p>Price is TBD</p>\n                      </div>\n                </div>\n                </div>\n                ))}\n          </div>\n        ))}\n      </div>\n    );\n  }\n  else {\n    ArtistTab();\n    return ArtistTab2();\n  };\n};\n\nexport default CoinList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}