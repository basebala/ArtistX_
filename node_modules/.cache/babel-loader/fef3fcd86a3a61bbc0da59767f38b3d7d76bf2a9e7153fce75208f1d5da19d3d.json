{"ast":null,"code":"var _jsxFileName = \"/Users/chandna/ArtistX/src/CoinList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CoinList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinList = ({\n  balance,\n  updateBalance,\n  userCoins,\n  curCoins,\n  updateFunction\n}) => {\n  _s();\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n  const buyCoin = coin => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue / coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map(c => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = c.price * quantityValue / c.marketcap; // Simulate a price change between -5 and +5\n          return {\n            ...c,\n            price: c.price + priceChange,\n            marketcap: c.marketcap + priceChange * 1000\n          };\n        }\n        return c;\n      });\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n  const sellCoin = coin => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue / coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map(c => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = c.price * quantityValue / c.marketcap; // Simulate a price change between -5 and +5\n          return {\n            ...c,\n            price: c.price - priceChange,\n            marketcap: c.marketcap - priceChange * 1000\n          };\n        }\n        return c;\n      });\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Coins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), coins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-border\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coin.imageurl,\n          alt: coin.name,\n          width: \"200\",\n          height: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [coin.name, \" (\", coin.symbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Coin Price: $\", coin.price.toFixed(3)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Market Cap: $\", coin.marketcap.toFixed(3)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Coins: \", userCoins[coin.symbol]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyCoin(coin),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sellCoin(coin),\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinList, \"TZCaiFdk+uFs2lrU81S9EUHNx0Q=\");\n_c = CoinList;\nexport default CoinList;\nvar _c;\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CoinList","balance","updateBalance","userCoins","curCoins","updateFunction","_s","coins","setCoins","quantity","setQuantity","buyCoin","coin","quantityValue","parseFloat","isNaN","symbol","price","alert","name","updatedCoins","map","c","priceChange","marketcap","sellCoin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","src","imageurl","alt","width","height","toFixed","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/chandna/ArtistX/src/CoinList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CoinList.css';\n\nconst CoinList = ({ balance, updateBalance, userCoins, curCoins, updateFunction }) => {\n  const [coins, setCoins] = useState(curCoins);\n  const [quantity, setQuantity] = useState('');\n\n  const buyCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && balance >= quantityValue) {\n      updateBalance(-quantityValue, coin.symbol, quantityValue/coin.price);\n      alert(`You've bought ${quantityValue} worth of ${coin.name} coin!`);\n\n      // Simulate a random price change after the purchase\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price + priceChange, marketcap: c.marketcap + priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough balance to buy ${coin.name} coin.`);\n    }\n  };\n\n  const sellCoin = (coin) => {\n    const quantityValue = parseFloat(quantity); // Parse quantity to a float\n\n    if (!isNaN(quantityValue) && userCoins[coin.symbol] * coin.price >= quantityValue) {\n      updateBalance(quantityValue, coin.symbol, -quantityValue/coin.price);\n      alert(`You've sold ${quantityValue} worth of ${coin.name} coin!`);\n      // Simulate a random price change after the sale\n      const updatedCoins = coins.map((c) => {\n        if (c.symbol === coin.symbol) {\n          const priceChange = (c.price * quantityValue) / c.marketcap; // Simulate a price change between -5 and +5\n          return { ...c, price: c.price - priceChange, marketcap: c.marketcap - priceChange * 1000 };\n        }\n        return c;\n      });\n\n      setCoins(updatedCoins);\n      updateFunction(updatedCoins);\n      setQuantity(''); // Reset quantity to an empty string\n    } else {\n      alert(`Not enough coins to sell ${coin.name} coin.`);\n    }\n  };\n\n  return (\n    <div className=\"stock-list\">\n      <h2>Available Coins</h2>\n      {coins.map((coin, index) => (\n        <div key={index} className=\"stock-item\">\n          <div className=\"stock-border\">\n            <img src={coin.imageurl} alt={coin.name} width=\"200\" height=\"200\" />\n            <p>{coin.name} ({coin.symbol})</p>\n            <p>Coin Price: ${coin.price.toFixed(3)}</p>\n            <p>Market Cap: ${coin.marketcap.toFixed(3)}</p>\n            <p>Your Coins: {userCoins[coin.symbol]}</p>\n            <input\n              type=\"text\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n            <button onClick={() => buyCoin(coin)}>Buy</button>\n            <button onClick={() => sellCoin(coin)}>Sell</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CoinList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACO,QAAQ,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,aAAa,GAAGC,UAAU,CAACL,QAAQ,CAAC,CAAC,CAAC;;IAE5C,IAAI,CAACM,KAAK,CAACF,aAAa,CAAC,IAAIZ,OAAO,IAAIY,aAAa,EAAE;MACrDX,aAAa,CAAC,CAACW,aAAa,EAAED,IAAI,CAACI,MAAM,EAAEH,aAAa,GAACD,IAAI,CAACK,KAAK,CAAC;MACpEC,KAAK,CAAE,iBAAgBL,aAAc,aAAYD,IAAI,CAACO,IAAK,QAAO,CAAC;;MAEnE;MACA,MAAMC,YAAY,GAAGb,KAAK,CAACc,GAAG,CAAEC,CAAC,IAAK;QACpC,IAAIA,CAAC,CAACN,MAAM,KAAKJ,IAAI,CAACI,MAAM,EAAE;UAC5B,MAAMO,WAAW,GAAID,CAAC,CAACL,KAAK,GAAGJ,aAAa,GAAIS,CAAC,CAACE,SAAS,CAAC,CAAC;UAC7D,OAAO;YAAE,GAAGF,CAAC;YAAEL,KAAK,EAAEK,CAAC,CAACL,KAAK,GAAGM,WAAW;YAAEC,SAAS,EAAEF,CAAC,CAACE,SAAS,GAAGD,WAAW,GAAG;UAAK,CAAC;QAC5F;QACA,OAAOD,CAAC;MACV,CAAC,CAAC;MAEFd,QAAQ,CAACY,YAAY,CAAC;MACtBf,cAAc,CAACe,YAAY,CAAC;MAC5BV,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACLQ,KAAK,CAAE,6BAA4BN,IAAI,CAACO,IAAK,QAAO,CAAC;IACvD;EACF,CAAC;EAED,MAAMM,QAAQ,GAAIb,IAAI,IAAK;IACzB,MAAMC,aAAa,GAAGC,UAAU,CAACL,QAAQ,CAAC,CAAC,CAAC;;IAE5C,IAAI,CAACM,KAAK,CAACF,aAAa,CAAC,IAAIV,SAAS,CAACS,IAAI,CAACI,MAAM,CAAC,GAAGJ,IAAI,CAACK,KAAK,IAAIJ,aAAa,EAAE;MACjFX,aAAa,CAACW,aAAa,EAAED,IAAI,CAACI,MAAM,EAAE,CAACH,aAAa,GAACD,IAAI,CAACK,KAAK,CAAC;MACpEC,KAAK,CAAE,eAAcL,aAAc,aAAYD,IAAI,CAACO,IAAK,QAAO,CAAC;MACjE;MACA,MAAMC,YAAY,GAAGb,KAAK,CAACc,GAAG,CAAEC,CAAC,IAAK;QACpC,IAAIA,CAAC,CAACN,MAAM,KAAKJ,IAAI,CAACI,MAAM,EAAE;UAC5B,MAAMO,WAAW,GAAID,CAAC,CAACL,KAAK,GAAGJ,aAAa,GAAIS,CAAC,CAACE,SAAS,CAAC,CAAC;UAC7D,OAAO;YAAE,GAAGF,CAAC;YAAEL,KAAK,EAAEK,CAAC,CAACL,KAAK,GAAGM,WAAW;YAAEC,SAAS,EAAEF,CAAC,CAACE,SAAS,GAAGD,WAAW,GAAG;UAAK,CAAC;QAC5F;QACA,OAAOD,CAAC;MACV,CAAC,CAAC;MAEFd,QAAQ,CAACY,YAAY,CAAC;MACtBf,cAAc,CAACe,YAAY,CAAC;MAC5BV,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACLQ,KAAK,CAAE,4BAA2BN,IAAI,CAACO,IAAK,QAAO,CAAC;IACtD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxB,KAAK,CAACc,GAAG,CAAC,CAACT,IAAI,EAAEoB,KAAK,kBACrBjC,OAAA;MAAiB2B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACrC5B,OAAA;QAAK2B,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B5B,OAAA;UAAKkC,GAAG,EAAErB,IAAI,CAACsB,QAAS;UAACC,GAAG,EAAEvB,IAAI,CAACO,IAAK;UAACiB,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpEhC,OAAA;UAAA4B,QAAA,GAAIf,IAAI,CAACO,IAAI,EAAC,IAAE,EAACP,IAAI,CAACI,MAAM,EAAC,GAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClChC,OAAA;UAAA4B,QAAA,GAAG,eAAa,EAACf,IAAI,CAACK,KAAK,CAACqB,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3ChC,OAAA;UAAA4B,QAAA,GAAG,eAAa,EAACf,IAAI,CAACY,SAAS,CAACc,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/ChC,OAAA;UAAA4B,QAAA,GAAG,cAAY,EAACxB,SAAS,CAACS,IAAI,CAACI,MAAM,CAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3ChC,OAAA;UACEwC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE/B,QAAS;UAChBgC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACFhC,OAAA;UAAQ6C,OAAO,EAAEA,CAAA,KAAMjC,OAAO,CAACC,IAAI,CAAE;UAAAe,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDhC,OAAA;UAAQ6C,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAACb,IAAI,CAAE;UAAAe,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC,GAdEC,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1EIN,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AA4Ed,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}